const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const OpenAI = require('openai');
require('dotenv').config();

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
const token = process.env.BOT_TOKEN;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è IO Intelligence API
const openai = new OpenAI({
    apiKey: process.env.secret,
    baseURL: "https://api.intelligence.io.solutions/api/v1/",
});

// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: true });

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
let gitaData = JSON.parse(fs.readFileSync('gita-data.json', 'utf8'));

// –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI
const SYSTEM_PROMPT = `–¢—ã ‚Äî –¥—É—Ö–æ–≤–Ω—ã–π —É—á–∏—Ç–µ–ª—å –∏ –º—É–¥—Ä–µ—Ü, –≥–æ–≤–æ—Ä—è—â–∏–π —Å –ª—é–¥—å–º–∏ —Å –ª—é–±–æ–≤—å—é –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ–º. –¢—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—à—å –∏ –≥–ª—É–±–æ–∫–æ –ø–æ–Ω–∏–º–∞–µ—à—å ¬´–ë—Ö–∞–≥–∞–≤–∞–¥-–ì–∏—Ç—É –∫–∞–∫ –æ–Ω–∞ –µ—Å—Ç—å¬ª ‚Äî –∫–Ω–∏–≥—É –ï–≥–æ –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ú–∏–ª–æ—Å—Ç–∏ –ê.–ß. –ë—Ö–∞–∫—Ç–∏–≤–µ–¥–∞–Ω—Ç—ã –°–≤–∞–º–∏ –ü—Ä–∞–±—Ö—É–ø–∞–¥—ã.

–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞—ë—Ç —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å –æ –∂–∏–∑–Ω–∏, —ç–º–æ—Ü–∏—è—Ö –∏–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö, —Ç—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ—à—å, –ø–æ–¥–±–∏—Ä–∞—è –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∏—Ö –∏–∑ –ì–∏—Ç—ã, –∞ —Ç–∞–∫–∂–µ –ø–æ—è—Å–Ω—è–µ—à—å –µ–≥–æ –≤ –¥—É—Ö–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ü—Ä–∞–±—Ö—É–ø–∞–¥—ã. 

–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ç–∏—Ä—É–µ—à—å, –∞ –¥–∞—ë—à—å –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–≥–æ —Å–æ–≤–µ—Ç–∞, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–Ω–∞–Ω–∏–∏ –¥—É—à–∏, –∫–∞—Ä–º—ã, –ë–æ–≥–∞ –∏ –∏—Å—Ç–∏–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞.

–¢–≤–æ–π —Å—Ç–∏–ª—å:
- –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π
- –°–∫—Ä–æ–º–Ω—ã–π –∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã–π –¥—É—Ö –¥—É—Ö–æ–≤–Ω–æ–º—É –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤—É
- –û–ø–æ—Ä–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ü—Ä–∞–±—Ö—É–ø–∞–¥—ã
- –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:  
  üåø [–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏]  
  üìñ [–ì–ª–∞–≤–∞ X, —Å—Ç–∏—Ö Y]: "[—Ç–µ–∫—Å—Ç —Å—Ç–∏—Ö–∞]"  
  üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: [–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤ —Å—Ç–∏–ª–µ –ü—Ä–∞–±—Ö—É–ø–∞–¥—ã]`;

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ–¥–±–µ—Ä—É –≤–∞–º —Å–æ–≤–µ—Ç –∏–∑ –ë—Ö–∞–≥–∞–≤–∞–¥-–ì–∏—Ç—ã.');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI
async function getAIResponse(userQuestion) {
  try {
    const response = await openai.chat.completions.create({
      model: "meta-llama/Llama-3.3-70B-Instruct",
      messages: [
        { role: "system", content: SYSTEM_PROMPT },
        { role: "user", content: userQuestion }
      ],
      temperature: 0.7,
      max_tokens: 500
    });
    return response.choices[0].message.content;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI:', error);
    return null;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
  try {
    const chatId = msg.chat.id;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if (!msg.text) {
      await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
      return;
    }

    const text = msg.text.toLowerCase();

    // –ü–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–∞—é—â–µ–π —Ç–µ–º—ã
    let matchedTopic = null;
    for (let item of gitaData) {
      if (item.keywords.some(kw => text.includes(kw))) {
        matchedTopic = item;
        break;
      }
    }

    if (matchedTopic) {
      const verse = matchedTopic.verses[Math.floor(Math.random() * matchedTopic.verses.length)];
      const response = `
üåø –°–æ–≤–µ—Ç –∏–∑ –ë—Ö–∞–≥–∞–≤–∞–¥-–ì–∏—Ç—ã:\n\n
–ì–ª–∞–≤–∞ ${verse.chapter}, —Å—Ç–∏—Ö ${verse.verse}:\n
"${verse.text}"\n\n
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n
${verse.commentary}
`;
      await bot.sendMessage(chatId, response);
    } else {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
      const loadingMsg = await bot.sendMessage(chatId, 'üîç –ò—â—É –º—É–¥—Ä–æ—Å—Ç—å –≤ –ë—Ö–∞–≥–∞–≤–∞–¥-–ì–∏—Ç–µ...');
      
      // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
      const aiResponse = await getAIResponse(msg.text);
      
      if (aiResponse) {
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await bot.deleteMessage(chatId, loadingMsg.message_id);
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        await bot.sendMessage(chatId, aiResponse);
      } else {
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.deleteMessage(chatId, loadingMsg.message_id);
        await bot.sendMessage(chatId, '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç, –Ω–æ –ø–æ–º–Ω–∏: ¬´–¢—ã –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ –Ω–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–æ –Ω–µ –Ω–∞ –µ—ë –ø–ª–æ–¥—ã¬ª (–ì–ª–∞–≤–∞ 2, —Å—Ç–∏—Ö 47).');
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    if (error.response && error.response.statusCode === 403) {
      console.log('–ë–æ—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    }
  }
});
